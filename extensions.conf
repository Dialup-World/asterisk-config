; extensions.conf - Boilerplate PhreakNet dialplan code
; v 1.0.1 (2021/07/01)

; Basic PhreakNet boilerplate dialplan
; * Feel free to add these to your dialplan or use these as a starting point.
; * Make sure you set all the required global variables to their proper values.
; * You *will* need v3.0+ of the verification subroutines (verification.conf) - https://docs.phreaknet.org/#verification and phreaknet.conf + iax.conf + sip.conf OR pjsip.conf + musiconhold.conf, at a minimum
; * Please read through this dialplan file. There are some things you need to update or fill in. The comments will alert you to this.
; * Feel free to call the Business Office (811) with questions.

; * To stay organized, you might consider putting all your dialplan files in the /etc/asterisk/dialplan/ directory (you'll need to create it first).
; * You might even want to take the contexts below and put them in another file. Up to you. Just make sure you know where to find things.
#include dialplan/verification.conf ; General core verification code
#include dialplan/phreaknet.conf ; PhreakNet main code. Most of the stuff you'll need to edit is here.
#include dialplan/phreaknet-aux.conf ; PhreakNet helper/auxillary routines. Tucked out of the way for now, but feel free to peek in.

[globals] ; Global variables, accessible from all channels
interlinkedkey=redacted ; your InterLinked API key: https://interlinked.us/account/integration
mainphreaknetdisa=8927111 ; change to any 7-digit number that routes to your node. DISA numbers are common.
clli=MEDIPAMEDS0 ; the CLLI of your node, used for tagging gateway calls with the origin node.
OC1=892

[PJSIP-RingHeader-indiv] ; ARG1 = cadence / ARG2 = PJSIP device name
exten => s,1,Set(LOCAL(aor)=${PJSIP_AOR(${ARG2},contact)})
	same => n,Set(LOCAL(agent)=${PJSIP_CONTACT(${aor},user_agent)}) ; if we know what user agent this is, we'll only send that header
	same => n,ExecIf(${ISNULL(${agent})}?Log(WARNING, No user agent found))
	same => n,GotoIf($[${REGEX("Grandstream" ${agent})}]?grandstream,1)
	same => n,GotoIf($[${REGEX("Linksys" ${agent})}|${REGEX("Cisco" ${agent})}]?linksys,1)
	same => n,GotoIf($[${REGEX("tSIP" ${agent})}|${REGEX("OBIHAI" ${agent})}]?obi,1)
	same => n,Goto(linksys,1) ; fallback to Cisco
exten => grandstream,1,Set(PJSIP_HEADER(add,Alert-Info)=<http://127.0.0.1>\;info=ring${ARG1}) ; Supports 1-10
	same => n,Return()
exten => linksys,1,Set(PJSIP_HEADER(add,Alert-Info)=<http://127.0.0.1>\;info=Bellcore-r${ARG1}) ; Linksys (e.g. PAP2T), etc.
	same => n,Return()
exten => obi,1,Set(PJSIP_HEADER(add,Alert-Info)=http://127.0.0.1/Bellcore-dr${ARG1:-1}) ; send only a single digit
	same => n,Return()

[from-voipms]
exten => 4848201337,1,NoOP()
	same => n,Dial(SIP/8927181&SIP/8927182&SIP/8927183&SIP/8927184,30,m(ringback))
        ;same => n,Dial(SIP/8927181,10,m(ringback))
        ;same => n,ExecIf($["${DIALSTATUS}" != "ANSWER"]?Dial(SIP/8927182,10,m(ringback)))
        ;same => n,ExecIf($["${DIALSTATUS}" != "ANSWER"]?Dial(SIP/8927183,10,m(ringback)))
        ;same => n,ExecIf($["${DIALSTATUS}" != "ANSWER"]?Dial(SIP/8927184,10,m(ringback)))
	same => n,Hangup()

[from-1800webtv]
exten => _.!,1,NoOP()
	same => n,Dial(SIP/8927181&SIP/8927182&SIP/8927183&SIP/8927184,30,m(ringback))
        ;same => n,Dial(SIP/8927181,10,m(ringback))
        ;same => n,ExecIf($["${DIALSTATUS}" != "ANSWER"]?Dial(SIP/8927182,10,m(ringback)))
        ;same => n,ExecIf($["${DIALSTATUS}" != "ANSWER"]?Dial(SIP/8927183,10,m(ringback)))
        ;same => n,ExecIf($["${DIALSTATUS}" != "ANSWER"]?Dial(SIP/8927184,10,m(ringback)))
        same => n,Hangup()


[from-webtv]
exten => _.!,1,NoOP()
	same => n,Dial(SIP/8927181&SIP/8927182&SIP/8927183&SIP/8927184,30,m(ringback))
        ;same => n,Dial(SIP/8927181,10,m(ringback))
        ;same => n,ExecIf($["${DIALSTATUS}" != "ANSWER"]?Dial(SIP/8927182,10,m(ringback)))
        ;same => n,ExecIf($["${DIALSTATUS}" != "ANSWER"]?Dial(SIP/8927183,10,m(ringback)))
        ;same => n,ExecIf($["${DIALSTATUS}" != "ANSWER"]?Dial(SIP/8927184,10,m(ringback)))
        same => n,Hangup()
